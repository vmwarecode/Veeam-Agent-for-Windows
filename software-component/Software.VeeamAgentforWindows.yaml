'@type': "SoftwareComponentType"
createdDate: "2017-05-24T01:08:56.290Z"
lastUpdated: "2017-06-01T15:42:38.069Z"
id: "Software.VeeamAgentforWindows"
name: "Veeam Agent for Windows"
description: "Installs the Veeam Agent for Windows and licenses it using a .lic file.\
  \ Both the .exe and .lic files must be on the same SMB share accessible to the deployed\
  \ system using the credentials set in the Properties section."
publishStatus: "PUBLISHED"
publishStatusName: "Published"
schema:
  fields:
  - id: "sharepass"
    label: "sharepass"
    description: "Password for the username with access to the share where the .exe\
      \ and .lic files are stored."
    dataType:
      type: "primitive"
      typeId: "SECURE_STRING"
    state:
      dependencies: []
      facets:
      - type: "encrypted"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
      - type: "derivedValue"
        value:
          type: "constant"
          value:
            type: "secureString"
            value: "password123"
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
    isMultiValued: false
  - id: "agentlicense"
    label: "agentlicense"
    description: "Filename of the license file in .lic format. It must have an entitlement\
      \ to the Veeam Agent for Windows."
    dataType:
      type: "primitive"
      typeId: "STRING"
    state:
      dependencies: []
      facets:
      - type: "derivedValue"
        value:
          type: "constant"
          value:
            type: "string"
            value: "veeam_agent_windows.lic"
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
    isMultiValued: false
  - id: "agentpackage"
    label: "agentpackage"
    description: "Filename of the agent installation package in .exe format. Use of\
      \ .zip files is not supported."
    dataType:
      type: "primitive"
      typeId: "STRING"
    state:
      dependencies: []
      facets:
      - type: "derivedValue"
        value:
          type: "constant"
          value:
            type: "string"
            value: "VeeamAgentWindows_2.0.0.700.exe"
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
    isMultiValued: false
  - id: "sharepath"
    label: "sharepath"
    description: "Full SMB path in UNC format where the .exe and .lic files reside.\
      \ Do not preface the value with backslashes."
    dataType:
      type: "primitive"
      typeId: "STRING"
    state:
      dependencies: []
      facets:
      - type: "derivedValue"
        value:
          type: "constant"
          value:
            type: "string"
            value: "server.domain.com\\path\\Software\\Veeam\\Windows Agent"
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
    isMultiValued: false
  - id: "host"
    label: "Container"
    description: ""
    dataType:
      type: "ref"
      componentTypeId: "com.vmware.csp.iaas.blueprint.service"
      classId: "Infrastructure.Machine.Schema"
      label: "Machine"
    state:
      dependencies: []
      facets:
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
      - type: "visible"
        value:
          type: "constantClause"
          value:
            type: "boolean"
            value: false
      - type: "internal"
        value:
          type: "constantClause"
          value:
            type: "boolean"
            value: true
    isMultiValued: false
  - id: "shareuser"
    label: "shareuser"
    description: "Username with permissions to read from the share path specified\
      \ in the \"sharepath\" property above."
    dataType:
      type: "primitive"
      typeId: "STRING"
    state:
      dependencies: []
      facets:
      - type: "derivedValue"
        value:
          type: "constant"
          value:
            type: "string"
            value: "user@domain.com"
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
    isMultiValued: false
  - id: "edition"
    label: "edition"
    description: "Sets the license edition for the agent and must be either \"workstation\"\
      \ or \"server\" without quotes."
    dataType:
      type: "primitive"
      typeId: "STRING"
    state:
      dependencies: []
      facets:
      - type: "mandatory"
        value:
          type: "constant"
          value:
            type: "boolean"
            value: true
      - type: "defaultValue"
        value:
          type: "constant"
          value:
            type: "string"
            value: "server"
    isMultiValued: false
containerFieldId: "host"
lifecycleTasks:
- createdDate: "2017-05-25T14:13:11.091Z"
  lastUpdated: "2017-06-01T15:58:01.827Z"
  script:
    scriptContent: "###Determine the edition and set the flag accordingly.###\nif\
      \ ($edition -eq \"workstation\"){\n    $ed = \"w\"\n    }\nelseif ($edition\
      \ -eq \"server\"){\n    $ed = \"s\"\n    }\nelse {\n    Write-Output \"The edition\
      \ property is not set correctly, so you will have to license the agent manually.\
      \ Check to ensure the spelling of either server or workstation is correct.\"\
      \n    exit 0}\n###Add the license file.###\nWrite-Output \"Adding the license\
      \ file.\"\n$licenseargs = \"/f:\"\"\\\\$sharepath\\$agentlicense\"\" /$ed\"\n\
      $agentinstall = Start-Process 'C:\\Program Files\\Veeam\\Endpoint Backup\\Veeam.Agent.Configurator.exe'\
      \ -ArgumentList '-license', $licenseargs  -Wait -PassThru -ErrorAction Stop\n\
      ###Check the exit code. If it's not zero, it wasn't successful.###\nif ($agentinstall.ExitCode\
      \ -ne 0)\n    {\n    Write-Output \"The license failed to add.\"\n    exit 1}\n\
      else\n    {\n    Write-Output \"The license file was added successfully and\
      \ set to the $edition edition.\"\n    exit 0\n    }"
    isRebootAfter: false
    scriptTypeId: "powershell"
  taskDescriptorRef:
    id: "CONFIGURE"
    label: "Configure"
- createdDate: "2017-05-24T01:08:56.293Z"
  lastUpdated: "2017-06-01T15:58:01.827Z"
  script:
    scriptContent: "###Mounting remote software share###\nWrite-Output \"Mounting\
      \ remote software repo.\"\nnet use \\\\$sharepath /user:$shareuser $sharepass\
      \ | Out-Null\n$path = Test-Path -Path \"\\\\$sharepath\"\nif ($path -ne \"True\"\
      ){\n    Write-Output \"The remote software share could not be mounted. Installation\
      \ cannot continue.\"\n    exit 1}\nelse {Write-Output \"The remote software\
      \ share was mounted.\"}\n###Begin agent installation process.###\n$arguments\
      \ =  \"/silent /accepteula\"\nWrite-Output \"Installing Veeam Agent for Windows\"\
      \nTry \n     {\n     Start-Process -FilePath \\\\$sharepath\\$agentpackage -ArgumentList\
      \ $arguments -Wait -NoNewWindow -ErrorAction Stop\n     }\nCatch\n     {\n \
      \    Write-Error \"Failed to install Veeam Agent for Windows.\"\n     Write-Error\
      \ $_.Exception\n     Exit -1 \n     }\n###Make sure it appears in the list of\
      \ programs.###\n$programs = Get-WmiObject -Class Win32_Product\nif ($programs.Name\
      \ -Contains \"Veeam Agent for Microsoft Windows\"){\n    Write-Output \"The\
      \ Veeam Agent has been installed.\"}\nelse {Write-Output \"The Veeam Agent doesn't\
      \ appear to be installed properly.\"\n    exit 1}\n###Make sure the service\
      \ is actually started.###\nWrite-Output \"Checking to ensure the Veeam Agent\
      \ is started.\"\n$veeamservice = Get-Service -Name \"Veeam Agent for Microsoft\
      \ Windows\"\nif ($veeamservice.Status -ne \"Running\")\n    {\n    Write-Output\
      \ \"The Veeam agent is not running. The system may need to be restarted. Check\
      \ the Event Viewer for more information.\"\n    exit 0\n    }\nelse\n    {\n\
      \    Write-Output \"The Veeam agent is running.\"\n    ###Get the message for\
      \ the agent install process and make sure the status is not zero.###\n    $lastevent\
      \ = (Get-EventLog -LogName Application -InstanceID 1033 -Newest 1)\n     if\
      \ ($lastevent.Message | Select-String -NotMatch \"error status: 0\")\n     \
      \    {Write-Output \"The installation error code was not zero. Check the event\
      \ logs for more details.\"}\n    else {Write-Output \"The agent is ready for\
      \ use.\"}\n    exit 0\n    }"
    isRebootAfter: false
    scriptTypeId: "powershell"
  taskDescriptorRef:
    id: "INSTALL"
    label: "Install"
